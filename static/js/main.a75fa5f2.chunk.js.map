{"version":3,"sources":["Home.js","Demo/Counter.js","Demo/ToggleCounter.js","Demo/ToggleBtn.js","Demo/PowerPlugin/State.js","Demo/PowerPlugin/List.js","Demo/PowerPlugin/Hover.js","Demo/PowerPlugin/PowerPlugin.js","Demo/Axios/PersonInput.js","Demo/Axios/Axios.js","Demo/Axios/PostUser.js","Demo/Demo.js","TodoList/AddTodo.js","TodoList/TodoItem.js","TodoList/Todolist.js","Dashboard.js/PostList.js","Dashboard.js/Dashboard.js","App.js","component/redux/rootReducer.js","component/redux/games.js","component/redux/actions.js","index.js"],"names":["Home","state","users","toggleComplete","index","user","newUsers","map","i","completed","complete","Axios","put","id","then","setState","addUsers","text","post","result","concat","editUsers","newText","deleteUser","delete","filter","Component","Counter","this","props","counts2","onClick","incrementCounter","ToggleCounter","count","console","log","interval","setInterval","clearInterval","ToggleBtn","isMounted","toggleMount","State","initial","bind","children","List","list","push","newValue","pull","fn","newList","listItem","Hover","hovered","onMouseEnter","onMouseLeave","PowerPlugin","loading","data","JSON","stringify","className","onSubmit","e","preventDefault","textRef","value","style","display","type","ref","node","lst","key","backgroundColor","PersonInput","persons","name","email","handleSubmit","event","res","catch","err","handleChange","target","onChange","AxiosList","errMsg","get","person","PostUser","axios","update","slice","React","HelloWorld","arrayDemo","fruit","newFruits","splice","removeFruit","modifyFruit","modify2Fruit","objectsDemo","student","newStudent","roll","first_name","count2","fruits","counts","getName","Math","random","AddTodo","todoText","changeTodo","SubmitHandler","addTodoState","placeholder","TodoItem","isEditing","toggleEditing","editSubmitHandler","editTodoState","clickHandler","deleteTodo","deleteTodoFromState","todo","defaultValue","float","Todolist","todos","newTodos","PostList","posts","getUserPostsList","prevProps","prevState","title","body","Dashboard","selectedUser","changeSelectedUser","length","src","alt","App","activeclassname","activeonlywhenexact","exact","to","path","component","rootReducer","combineReducers","games","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a75fa5f2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        // users: [{ email: '', fullname: '', username: '', password:''}]\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Axios.get(\"http://18.211.62.105:7822/apartmynts/api/v1/user/update-user\")\r\n        // Axios.get(\"http://localhost:8080/users\")\r\n        // .then(result => {\r\n            // console.log(result);\r\n\r\n            // this.setState({\r\n            //     users: result.data\r\n            // });\r\n        // });\r\n    }\r\n\r\n    toggleComplete = (index) => {\r\n        // const user = this.state.users[index];    or\r\n        \r\n        const { users } = this.state;\r\n        const user = users[index];\r\n\r\n        // const newUsers = this.state.users.map((user, i) => {\r\n        const newUsers = users.map((user, i) => {\r\n            if(index === i) {\r\n                return {\r\n                    ...user,\r\n                    completed: !user.complete\r\n                };\r\n            }\r\n            return user;\r\n        });\r\n\r\n        Axios.put(\"http://localhost:8080/users/\" + user.id, {\r\n            ...user,\r\n            completed: !user.completed\r\n        })\r\n        .then(() => {\r\n            this.setState({\r\n                users: newUsers\r\n            });\r\n        });\r\n    };\r\n\r\n    addUsers = (text) => {\r\n        Axios.post(\"http://localhost:8080/users\", {\r\n            // text: text\r\n            text\r\n        })\r\n        .then((result) => {\r\n            const newUsers = this.state.users.concat({\r\n                text\r\n            });\r\n\r\n            this.setState({\r\n                users: newUsers\r\n            });\r\n        });\r\n    };\r\n\r\n    editUsers = (index, newText) => {\r\n        // const { users, email, fullname, username, password } = this.state;\r\n        const { users } = this.state;\r\n        const user = users[index];\r\n\r\n        // Axios.put(\"http://18.211.62.105:7822/apartmynts/api/v1/user/update-user/\", { email, fullname, username, password})\r\n        Axios.post(\"http://localhost:8080/users/\" + user.id, {\r\n            ...user,\r\n            completed: !user.completed\r\n        })\r\n        .then(() => {\r\n            const newUsers = users.map((user, i) => {\r\n                if (index === i) {\r\n                    return {\r\n                        ...user,\r\n                        text: newText\r\n                    };\r\n                }\r\n    \r\n                return user;\r\n            });\r\n    \r\n            this.setState({\r\n                users: newUsers\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    deleteUser = (index) => {\r\n        const { users } = this.state;\r\n        const user = users[index];\r\n\r\n        Axios.delete(\"http://localhost:8080/users/\" + user.id)\r\n        .then(() => {\r\n            const newUsers = users.filter((user, i) => {\r\n                return index === i ? false : true;\r\n            });\r\n\r\n            this.setState({\r\n                users: newUsers\r\n            });\r\n        });\r\n    };\r\n\r\n  render() {\r\n    //   const { user } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <h1>Home Page</h1>\r\n        {/* <li\r\n        className={user.completed ? \"completed\" : \"\"}\r\n        >\r\n            <span>\r\n                <button\r\n                onClick={this.clickHandler}\r\n                >\r\n                {user.text}\r\n                </button>\r\n            </span>\r\n\r\n            <span>\r\n                <button\r\n                onClick={this.editUsers}\r\n                >\r\n                Edit\r\n                </button>\r\n                <button\r\n                onClick={this.deleteUser}\r\n                >\r\n                Delete\r\n                </button>\r\n            </span>\r\n        </li> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.counts2}\r\n        <div>\r\n            <button\r\n            onClick={this.props.incrementCounter}\r\n            >\r\n            Add Counter\r\n            </button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\n\r\nclass ToggleCounter extends Component {\r\n  state = {\r\n      count: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n      console.log(\"ToggleCounter mounted\");\r\n      // this.interval is like a state, this can be used inside any component\r\n      // we made this.interval so that we can use interval in other component also.\r\n      // when a state is changed, render method is called, but on changing this render method will not called\r\n      this.interval = setInterval(() => {\r\n          this.setState({\r\n              count: this.state.count + 1\r\n          });\r\n      }, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"ToggleCounter un-mounted\");\r\n    //not setting clear interval will show error\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n      const { count } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {count}\r\n        <br/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToggleCounter;\r\n","import React, { Component } from 'react'\r\nimport ToggleCounter from './ToggleCounter';\r\n\r\nclass ToggleBtn extends Component {\r\n    state = {\r\n        isMounted: true\r\n    };\r\n\r\n    toggleMount = () => {\r\n        const { isMounted } = this.state;\r\n        this.setState({ isMounted: !isMounted });\r\n    }\r\n\r\n  render() {\r\n      const { isMounted } = this.state;\r\n\r\n    return (\r\n      <>\r\n      {isMounted && <ToggleCounter />}\r\n      <button onClick={this.toggleMount}>Toggle</button>  \r\n      <p>\r\n      this.interval is like a state, this can be used inside any component. <br/>\r\n      we made this.interval so that we can use interval in other component also. <br/>\r\n      when a state is changed, render method is called, but on changing this render method will not called. <br/>\r\n      <br/>this.interval = setInterval(() = \r\n      <br/>this.setState(\r\n      <br/>count: this.state.count + 1\r\n      <br/>)\r\n      <br/>\"crly\" , 1000);\r\n      <br/>\r\n      <br/>componentWillUnmount() \r\n      <br/>not setting clear interval will show error\r\n      <br/>clearInterval(this.interval)\r\n      </p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToggleBtn;\r\n","import React, { Component } from 'react'\r\n\r\nclass State extends Component {\r\n  // constructor(props){\r\n  //   super();\r\n  //   this.state = {\r\n  //     ...this.props.initial\r\n  //   }\r\n  // }\r\n  // ---- or ----\r\n  state = {\r\n    ...this.props.initial\r\n  }\r\n  \r\n  render() {\r\n    this.setState = this.setState.bind(this);\r\n    // mostly we add bind method inside constructor, but here we are not using constructor, so we added inside render().\r\n    //we added bind coz setState was loosing its property\r\n    return (\r\n      <>\r\n        {/* {this.props.children} */}\r\n        {/* {this.props.children()} */}\r\n        {this.props.children({\r\n          state: this.state,\r\n          setState: this.setState\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default State;\r\n","import { Component } from 'react';\r\n\r\nclass List extends Component {\r\n    state = {\r\n        list: this.props.initial\r\n    }\r\n\r\n    push = (newValue) => {\r\n        this.setState({\r\n            // immutable way\r\n            // list: this.state.list.concat(newValue)\r\n            list: [...this.state.list, newValue]\r\n        });\r\n    };\r\n\r\n    pull = (fn) => {\r\n        const newList = this.state.list.filter((listItem, index) => {\r\n            return !fn(listItem, index)\r\n            // if true => remove\r\n        });\r\n\r\n        this.setState({list: newList});\r\n    };\r\n\r\n  render() {\r\n    return this.props.children({\r\n        list: this.state.list,\r\n        push:this.push,\r\n        pull: this.pull\r\n    })\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import { Component } from 'react'\r\n\r\nclass Hover extends Component {\r\n  state = {\r\n    hovered: false\r\n  };\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({\r\n      hovered: true\r\n    });\r\n  };\r\n\r\n  onMouseLeave = () => {\r\n    this.setState({\r\n      hovered: false\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return this.props.children({\r\n        hovered: this.state.hovered,\r\n        bind: {\r\n          onMouseEnter: this.onMouseEnter,\r\n          onMouseLeave: this.onMouseLeave\r\n        }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Hover;\r\n","import React, { Component } from 'react';\r\nimport State from './State';\r\nimport List from './List';\r\nimport Hover from './Hover';\r\n\r\nclass PowerPlugin extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <p>It's a plugin which is used for re-usable components.\r\n        </p>\r\n        <section>\r\n          <h3>State function renders</h3>\r\n          this state runs child property, one at a time \r\n          <State initial={{ loading: false, data: null }}>\r\n            {/* <h2>State renders</h2> */}\r\n            {({ state, setState }) => {\r\n              return <div>\r\n              <h4>{JSON.stringify(state)}</h4>\r\n              <button\r\n              className=\"ui green button\"\r\n              onClick={() => setState({\r\n                loading: !state.loading\r\n              }) }>Toggle Loading</button>  \r\n              </div>\r\n            }}\r\n          </State>\r\n        </section>\r\n<hr/>\r\n        <section>\r\n          <State initial={{ count: 0 }}>\r\n            {({ state, setState }) => {\r\n              return <div>\r\n              <br/>\r\n              <h3>State Counter function renders</h3>\r\n              <h4>{JSON.stringify(state)}</h4>\r\n              <button\r\n              className=\"ui blue button\"\r\n              onClick={() => setState({\r\n                count: state.count + 1\r\n              }) }>Add Counter</button>  \r\n              <button\r\n              className=\"ui yellow button\"\r\n              onClick={() => setState({\r\n                count: 0\r\n              }) }>Reset Counter</button>  \r\n              </div>\r\n            }}\r\n          </State>\r\n        </section>\r\n<hr/>\r\n        <section>\r\n          <br/>\r\n          <h3>List Example</h3>\r\n          <p>Add / Remove Items</p>\r\n          <List initial={[\"Apples\", \"Banana\"]}>\r\n            {({ list, push, pull }) => (\r\n              // <div>{JSON.stringify(list)}</div>\r\n              <div>\r\n                <form\r\n                className=\"ui form\"\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  push(this.textRef.value)\r\n                  this.textRef.value = \"\"\r\n                }}\r\n                >\r\n                  <div className=\"field\" style={{display: \"inline-flex\"}}>\r\n                    <input type=\"text\"\r\n                    ref={(node) => this.textRef = node}\r\n                    />\r\n                    <button\r\n                    className=\"ui violet button\"\r\n                    type=\"submit\"\r\n                    >Add Items</button>\r\n                  </div>\r\n                </form>\r\n\r\n                <div className=\"ui middle aligned selection list\">\r\n                {list.map((lst, id) => (\r\n                  <div className=\"item\" key={id}\r\n                  onClick={() => {\r\n                    pull((listItem, index) => {\r\n                      return id === index\r\n                    })\r\n                  }}\r\n                  >\r\n                    <div className=\"content\">\r\n                      <div className=\"header\">\r\n                      <i className=\"angle double right icon\"></i>\r\n                        {lst}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </List>\r\n        </section>\r\n<hr/>\r\n        <section>\r\n          <br/>\r\n          <Hover>\r\n            {({ hovered, bind }) => (\r\n              <section>\r\n                <div {...bind}>\r\n                  <button\r\n                  className=\"ui button\"\r\n                  style={{\r\n                    backgroundColor: hovered \r\n                                    ? \"violet\"\r\n                                    : \"yellow\"\r\n                  }}\r\n                  >Hover Over Me</button>\r\n                  {hovered ? \"hovering\" : \"not hovering\"}\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Hover>\r\n        </section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PowerPlugin;\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass PersonInput extends Component {\r\n\r\n    state = {\r\n        persons: [],\r\n        // id: 0,\r\n        name: \"\",\r\n        email: \"\"\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const persons = {\r\n            name: this.state.name,\r\n            email: this.state.email\r\n        };\r\n        Axios.post('https://jsonplaceholder.typicode.com/users', persons)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            // this.setState({persons: res.data});\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        });\r\n    };\r\n\r\n    // deleteUser = event => {\r\n    //     const persons = {\r\n    //         name: this.state.name,\r\n    //         email: this.state.email\r\n    //     };\r\n    //     Axios.delete(`https://jsonplaceholder.typicode.com/users/${this.state.id}`)\r\n    //     .then(res => {\r\n    //         console.log(res);\r\n    //         console.log(res.data);\r\n    //     });\r\n    // };\r\n\r\n    handleChange = event => {\r\n        this.setState({ \r\n            // [event.target.id]: event.target.value\r\n            [event.target.name]: event.target.value,\r\n            [event.target.email]: event.target.value\r\n         });\r\n    };\r\n\r\n  render() {\r\n      const { name, email } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form\r\n        className=\"ui form\"\r\n        onSubmit={this.handleSubmit}\r\n        >\r\n          <div className=\"field\"\r\n          style={{display: \"inline-flex\"}}\r\n          >\r\n            <label>Name:\r\n              <input type=\"text\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                value={name}\r\n              />\r\n            </label>\r\n            <label>Email:\r\n              <input type=\"text\"\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n                value={email}\r\n              />\r\n            </label>\r\n            <button\r\n            className=\"ui violet button\"\r\n            type=\"submit\"\r\n            >Add Items</button>\r\n            {/* <label>Id:\r\n              <input type=\"number\"\r\n                name=\"id\"\r\n              />\r\n            </label>\r\n            <button\r\n            className=\"ui violet button\"\r\n            onClick={this.deleteUser()}\r\n            >delete Items</button> */}\r\n          </div>\r\n        </form>\r\n\r\n        {/* {\r\n          persons.length ?\r\n          persons.map(person => <div key={person.id}>\r\n            {person.name}\r\n          </div>) : null\r\n          } */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PersonInput;\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport PersonInput from './PersonInput';\r\n\r\nclass AxiosList extends Component {\r\n\r\n    state = {\r\n        persons: [],\r\n        errMsg: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => {\r\n            console.log((res));\r\n            this.setState({ persons: res.data });\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          this.setState({errMsg: \"Error retrieving data\"})\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { errMsg } = this.state\r\n    return (\r\n      <>\r\n        <PersonInput />\r\n\r\n        <div className=\"ui  middle aligned selection relaxed divided list\">\r\n          {this.state.persons.map(person => (\r\n            <div key={person.id} className=\"item\">\r\n                <i className=\"large github middle aligned icon\"></i>\r\n                <div className=\"content\">\r\n                  <span>\r\n                  <p className=\"header\">\r\n                   {person.name}\r\n                  </p>\r\n                  <div className=\"description\">\r\n                  Email: {person.email}\r\n                  </div>\r\n                  </span>\r\n                </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* {\r\n          here, instead of writting\r\n          this.state.persons => persons==@\r\n          we can write, below after\r\n          --- render() ---\r\n          const { persons, errMsg } = this.state\r\n          --- return ---\r\n          @==\r\n          {\r\n          persons.length ?\r\n          persons.map(person => <div key={person.id}>\r\n            {person.name}\r\n          </div>) : null\r\n          } */}\r\n          { errMsg ? <h3>{errMsg}</h3> : null}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AxiosList;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class PostUser extends React.Component {\r\n  state = {\r\n    name: '',\r\n    persons: []\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      name: this.state.name\r\n    };\r\n\r\n    axios.post(`https://jsonplaceholder.typicode.com/users`, { user })\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        this.setState({user: res.data})\r\n      })\r\n  }\r\n\r\nupdate = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n        name: this.state.name\r\n      };\r\n    axios.put(`https://jsonplaceholder.typicode.com/users/${this.state.id}`, user)\r\n    .then(res => console.log(res.data));\r\n}\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\r\n      .then(res => {\r\n        const persons = res.data.slice(0,4);\r\n        this.setState({ persons });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    //   const {name, persons} = this.state\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Person Name:\r\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} />\r\n          </label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n        <ul>\r\n        { this.state.persons.map(person => <li \r\n        key={person.id}\r\n        onClick={this.update}>{person.name}</li>)}\r\n      </ul>\r\n        \r\n        {/* <div className=\"ui  middle aligned selection relaxed divided list\">\r\n          {persons.map(person => (\r\n            <div key={person.id} className=\"item\">\r\n                <i className=\"large github middle aligned icon\"></i>\r\n                <div className=\"content\">\r\n                  <span>\r\n                  <p className=\"header\">\r\n                  {person.name}\r\n                  </p>\r\n                  <div className=\"description\">\r\n                  Email: {person.email}\r\n                  </div>\r\n                  </span>\r\n                </div>\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport Counter from './Counter';\r\nimport './Demo.css';\r\nimport ToggleBtn from './ToggleBtn';\r\nimport PowerPlugin from './PowerPlugin/PowerPlugin';\r\nimport AxiosList from './Axios/Axios';\r\nimport PostUser from './Axios/PostUser';\r\n\r\n// class Demo extends Component {\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h1>Demo</h1>\r\n//       </>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// class Hello extends Component {\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h3>Hello</h3>\r\n//       </>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// class World extends Component {\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h3>World</h3>\r\n//       </>\r\n//     )\r\n//   }\r\n// }\r\n\r\nclass HelloWorld extends Component {\r\n  constructor() {\r\n    super();\r\n    this.name = \"Demo Name\";\r\n\r\n    this.state = {\r\n      first_name: \"First Name\",\r\n      count: 0,\r\n      count2: 0,\r\n      fruits: [\"banana\", \"apple\", \"mango\"]  //Array\r\n    }\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n    arrayDemo = () => {\r\n    //add\r\n    const fruit = [\"orange\"];\r\n    fruit.push(\"Kiwi\");\r\n    const newFruits = fruit.concat(\"Apples\");\r\n    console.log(\"fruit\", fruit);\r\n    console.log(\"newFruits\", newFruits);\r\n    \r\n    //remove\r\n    newFruits.splice(0,1);\r\n    console.log(\"newFruits\", newFruits);\r\n    const removeFruit = newFruits.filter((fruit, index) => {return index === 0});\r\n    console.log(\"removeFruit has removed fruit, but didnt change the array\", removeFruit);\r\n    console.log(\"newFruits does changed\", newFruits);\r\n    \r\n    //modify\r\n    fruit[1] = \"Water Melon\"\r\n    fruit[0] = \"kiwi salad\"\r\n    const modifyFruit = newFruits.map((fruit) => {\r\n      return fruit + \" salad\"\r\n    });\r\n    console.log(\"modifyFruit\", modifyFruit);\r\n\r\n    const modify2Fruit = newFruits.map((fruit, index) => {\r\n    if (index === 0) {\r\n      return \"kiwiz\"\r\n      }\r\n    return fruit\r\n    });\r\n    console.log(\"modify2Fruit\", modify2Fruit);\r\n    console.log(\"newFruits\", newFruits);\r\n  }\r\n\r\n    objectsDemo = () => {\r\n      const student = {\r\n        name: 'qwerty'\r\n      }\r\n\r\n      //mutable\r\n      student.name = 'Qwerty';\r\n      console.log(\"student\", student);\r\n      \r\n      //immutable\r\n      const newStudent = {\r\n        ...student,\r\n        name: 'modified name',\r\n        roll: 25\r\n      }\r\n\r\n      console.log(\"newStudent\", newStudent);\r\n      console.log(\"student\", student);\r\n  }\r\n\r\n    incrementCounter() {\r\n      //storing count from state into variable\r\n      let counts = this.state.count;\r\n      this.setState({\r\n        count: ++counts,\r\n        count2: 2 + counts\r\n      });\r\n    }\r\n\r\n    getName() {\r\n        return \"Qwerty\";\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n      <PostUser/>\r\n      \r\n        <span>\r\n            {/* <Demo />\r\n            <Hello />\r\n            <World /> */}\r\n        </span>\r\n\r\n        <section>\r\n        <h3 className=\"ui horizontal divider header\">\r\n          <i className=\"tag icon\"></i>\r\n          Power Plugin\r\n        </h3>\r\n          <PowerPlugin />\r\n          <br/>        \r\n        </section>\r\n\r\n        <section>\r\n        <h3 className=\"ui horizontal divider header\">\r\n          <i className=\"tag icon\"></i>\r\n          Axios List\r\n        </h3>\r\n            <AxiosList/>\r\n        <br/>\r\n        </section>\r\n        \r\n        <section>\r\n        <h3 className=\"ui horizontal divider header\">\r\n          <i className=\"tag icon\"></i>\r\n          State\r\n        </h3>\r\n          State: It provides us to pass / store the data dynamically,<br/>\r\n          and we can render that in UI page\r\n        </section>\r\n        \r\n        <section>\r\n            You can only use expression statements in here, <br/>\r\n            no if / for loop statements wrok inside return. <br/><br/>\r\n            <b>In class before render() you can use : </b><br/>\r\n            1. constructor() - super()<br/>\r\n            2. methods <br/>\r\n            3. function <br/>\r\n        </section>\r\n        \r\n        <section>\r\n            <hr/><br />\r\n            Js calculation: { 2 + 2 } <br/>\r\n            JSX constructor function call: {this.name} <br/>\r\n            JSX state call: {this.state.first_name} <br/>\r\n            JSX method call: {this.getName()}  <br/>\r\n            <hr/><br />\r\n            {this.state.count}\r\n            <div>\r\n              <button\r\n              onClick={this.incrementCounter}\r\n              >\r\n                Add Counter\r\n              </button>\r\n            </div>\r\n            <br/>\r\n        </section>\r\n\r\n        <section>\r\n          <h3 className=\"ui horizontal divider header\">\r\n            <i className=\"tag icon\"></i>\r\n            Props\r\n          </h3>\r\n            For passing property of state in one component into another component, we use props <br/>\r\n            We can not only pass the state from one component to another, we can even pass function also, which can modify state, using props. <br/>\r\n            Props are read only. Props can not modify component, here \"count\" belongs to Demo.js from \"state\" we are getting the data and passing it as a \"props\" to counter.js file <br/>\r\n            \"counts2\" is just called, props is not changing. It is just calling data. <br/>\r\n            It is uni-directional, passes in one direction only. I hv any kind of bug, then we can find that only in Main component file, here its Demo.js, cuz here only state belongs so the bug/error will be here in demo.js file only. <br/>\r\n\r\n          <Counter\r\n          counts2={this.state.count2} \r\n          incrementCounter={this.incrementCounter}\r\n          />\r\n        </section>\r\n       \r\n        <section>\r\n          <hr/><br />\r\n          Array Example\r\n          {this.state.fruits.map((fruit, index) => {\r\n              return (\r\n                <ol className=\"steps\" key={Math.random()}>\r\n                  <li key={index}>\r\n                      { fruit }\r\n                  </li>\r\n                </ol>\r\n              )\r\n            })\r\n          }\r\n        </section>\r\n        \r\n        <section>\r\n        <h3 className=\"ui horizontal divider header\">\r\n          <i className=\"tag icon\"></i>\r\n          Array Demo\r\n        </h3>\r\n          <p>Immutable vs Mutable</p>\r\n\r\n          <h4>Add Items:</h4>\r\n\r\n          const fruit = [\"orange\"];<br/><br/>\r\n\r\n          We can do this:<br/>\r\n          fruit.push(\"Kiwi\");<br/><br/>\r\n\r\n          Better approach:<br/>\r\n          const newFruits = fruit.concat(\"Apples\");\r\n          <br/><br/>\r\n\r\n          console.log(fruit);<br/>\r\n          console.log(newFruits);<br/><br/>\r\n          \r\n          <h4>Remove Items:</h4>\r\n          newFruits.splice(0,1);<br /><br />\r\n\r\n          Better Way:<br />\r\n          const newFruit = newFruits.filter((fruit, index) = return index !== 0 );<br /><br />\r\n\r\n          console.log(newFruit);<br />\r\n          console.log(fruit);<br /><br />\r\n\r\n          <h4>Modify Items:</h4>\r\n                 fruit[1] = \"Water Melon\"\r\n          <br /> fruit[0] = \"kiwi salad\"\r\n          <br /> const modifyFruit = newFruits.map((fruit) = \r\n          <br />   return fruit + \" salad\"\r\n          <br /> );\r\n          <br /> console.log(\"modifyFruit\", modifyFruit);\r\n          <br />\r\n          <br /> const modify2Fruit = newFruits.map((fruit, index) = \r\n          <br /> if (index === 0) \r\n          <br />   'return' \"kiwiz\"\r\n          <br />\r\n          <br /> 'return' 'fruit'\r\n          <br /> );\r\n          <br />\r\n          <br /> console.log(\"modify2Fruit\", modify2Fruit);\r\n          <br /> console.log(\"newFruits\", newFruits);\r\n          {this.arrayDemo()}\r\n          <br/>\r\n          <br/>\r\n        </section>\r\n        \r\n        <section>\r\n        <h3 className=\"ui horizontal divider header\">\r\n          <i className=\"tag icon\"></i>\r\n          Objects Demo\r\n        </h3>\r\n\r\n        <br />  const student = \r\n        <br />  name: 'qwerty'\r\n        <br />  \r\n\r\n        <h3>Mutable</h3>\r\n                student.name = 'Qwerty';\r\n        <br />  console.log(\"student\", student);\r\n        <br />  \r\n      \r\n        <h3>Immutable</h3>\r\n                  const newStudent = \r\n        <br />    ...student,\r\n        <br />    name: 'modified name',\r\n        <br />    roll: 25\r\n        <br />  \r\n\r\n        <br />  console.log(\"newStudent\", newStudent);\r\n        <br />  console.log(\"student\", student);\r\n\r\n          {this.objectsDemo()}\r\n        <br />\r\n        <br />\r\n        </section>\r\n        \r\n        <section>\r\n        <h3 className=\"ui horizontal divider header\">\r\n          <i className=\"tag icon\"></i>\r\n          Un-mounting Demo\r\n        </h3>\r\n          <ToggleBtn />\r\n        </section>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport { HelloWorld };\r\n","import React, { Component } from 'react'\r\n\r\nclass AddTodo extends Component {\r\n  state = {\r\n    todoText: \"\"\r\n  }\r\n  \r\n  //w/o changeTodo u will not able to see whatevr u wrt inside input tag\r\n  changeTodo = (e) => {\r\n    this.setState({\r\n      todoText: e.target.value\r\n    });\r\n  };\r\n\r\n  //onSubmit triggers both the event in one; ie. input change & submit buttn\r\n  SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodoState(this.state.todoText);\r\n    this.setState({\r\n      todoText: \"\"\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"ui form\" \r\n        onSubmit={this.SubmitHandler}\r\n        >\r\n          <div className=\"ui left icon input\">\r\n            &nbsp;&nbsp;&nbsp;\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Todo Items\"\r\n            onChange={this.changeTodo} \r\n            value={this.state.todoText}\r\n            />\r\n            <i className=\"pencil alternate icon\"></i>\r\n          <button\r\n          type=\"submit\"\r\n          className=\"ui inverted purple button\">\r\n            Add Todo\r\n          </button>\r\n          </div>\r\n        </form><br/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from 'react'\r\n\r\nclass TodoItem extends Component {\r\n\r\n    state = {\r\n        isEditing: false\r\n    };\r\n\r\n    toggleEditing = () => {\r\n        this.setState({\r\n            isEditing: !this.state.isEditing\r\n        });\r\n    };\r\n\r\n    editSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.props.editTodoState(this.props.index, this.newText.value);\r\n\r\n        //bring back to default state\r\n        this.toggleEditing();\r\n    };\r\n\r\n    clickHandler = () => {\r\n        this.props.toggleComplete(this.props.index);\r\n    };\r\n    \r\n    deleteTodo = () => {\r\n        this.props.deleteTodoFromState(this.props.index);\r\n    };\r\n\r\n  render() {\r\n    //const todo = this.props.todo;\r\n    //de-structring\r\n      const { todo } = this.props;\r\n\r\n      if (this.state.isEditing){\r\n        //   return \"Editing\";\r\n        return <>\r\n            <form className=\"ui form edits\"\r\n            onSubmit={this.editSubmitHandler}\r\n            >\r\n            <input\r\n            type=\"text\"\r\n            className=\"editsInput\"\r\n            ref={(node) => {\r\n                this.newText = node;\r\n            }}\r\n            defaultValue={todo.text}\r\n            />\r\n\r\n            {/* cancel */}\r\n            <div style={{float: 'right'}} className=\"ui small inverted red icon buttons\">\r\n            <button className=\"ui button\"\r\n            onClick={this.toggleEditing}\r\n            >\r\n            <i className=\"close icon icon\"></i>\r\n            </button>\r\n            </div>\r\n\r\n            {/* save */}\r\n            <div style={{float: 'right'}} className=\"ui small inverted green icon buttons\">\r\n            <button className=\"ui button\"\r\n            type=\"submit\"\r\n            >\r\n            <i className=\"check icon\"></i>\r\n            </button>\r\n            </div>\r\n            </form>\r\n        </>\r\n      }\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"item\">\r\n            <span style={{display: \"inline-flex\"}}>\r\n            <i className={\r\n              todo.completed\r\n              ? \"check icon\"\r\n              : \"angle double right icon\"\r\n              }></i>\r\n            <li\r\n            onClick={this.clickHandler}\r\n            className={\r\n              todo.completed\r\n              ? \"completed\"\r\n              : \"\"\r\n            }>\r\n              {todo.text}\r\n            </li>\r\n            </span>\r\n            \r\n            {/* Delete */}\r\n            <div style={{float: 'right'}} className=\"ui small inverted red icon buttons\">\r\n            <button className=\"ui button\"\r\n            onClick={this.deleteTodo}\r\n            >\r\n                <i className=\"trash alternate icon\"></i>\r\n            </button>\r\n            </div>\r\n\r\n            {/* Edit */}\r\n            <div style={{float: 'right'}} className=\"ui small inverted green icon buttons\">\r\n            <button className=\"ui button\"\r\n            onClick={this.toggleEditing}\r\n            >\r\n                <i className=\"edit outline icon\"></i>\r\n            </button>\r\n            </div>\r\n        </ul>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nimport './TodoList.css';\r\n\r\nimport AddTodo from './AddTodo';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nclass Todolist extends Component {\r\n    //constructor(){ super() this.state = {}}   //or\r\n    state = {\r\n        todos: [\r\n            // {\r\n            // text: \"Buy Milk\",\r\n            // completed: false\r\n            // },\r\n            // {\r\n            // text: \"Buy Egg\",\r\n            // completed: false\r\n            // }\r\n        ]\r\n    };\r\n\r\n    componentDidMount() {\r\n      Axios.get(\"http://localhost:8080/todos\")\r\n      .then(result => {\r\n          console.log(result);\r\n\r\n          this.setState({\r\n              todos: result.data\r\n          });\r\n      });\r\n    };\r\n\r\n    toggleComplete = (index) => {\r\n      // const todo = this.state.todo[index];    or\r\n      const { todos } = this.state;\r\n      const todo = todos[index];\r\n\r\n      const newTodos = this.state.todos\r\n      .map((todo, i) => {\r\n        if (index === i) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed\r\n          };\r\n        }\r\n        return todo;\r\n        //return as it is, if not add return it show undefined / no output\r\n      });\r\n\r\n      // Axios.put(\"API header\" + \"add data with url\", {}<- empty array will remove data from server/ {...todo, completed} <- update the value inside the list on server)\r\n      Axios.put(\"http://localhost:8080/todos/\" + todo.id, {\r\n            ...todo,\r\n            completed: !todo.completed\r\n        })\r\n        .then(() => {\r\n            this.setState({\r\n                todos: newTodos\r\n            });\r\n        });\r\n\r\n      this.setState({\r\n        todos: newTodos\r\n      });\r\n    };\r\n\r\n    addTodoState = (text) => {\r\n      Axios.post(\"http://localhost:8080/todos\", {\r\n            text,\r\n            completed: false\r\n        })\r\n        .then((result) => {\r\n          const newTodos = this.state.todos.concat({\r\n            //as key & value both r same we write only text here as per ES6 rules\r\n            // text: text\r\n            text\r\n          });\r\n\r\n        //this will add new values inside todos list\r\n        this.setState({\r\n          todos: newTodos\r\n        });\r\n      });\r\n    };\r\n\r\n    deleteTodoFromState = (index) => {\r\n      const { todos } = this.state;\r\n      const todo = todos[index];\r\n\r\n      Axios.delete(\"http://localhost:8080/todos/\" + todo.id)\r\n      .then(() => {\r\n        const newTodos = this.state.todos\r\n        .filter((todo, i) => {\r\n        //   if (index === i) {\r\n        //     return false;\r\n        //   }\r\n        //   return true;\r\n\r\n        // or in small way\r\n        return index === i ? false : true;\r\n        });\r\n\r\n        //this will remove selected item from todos list\r\n        this.setState({\r\n          todos: newTodos\r\n        });\r\n      });\r\n    };\r\n\r\n    editTodoState = (index, newText) => {\r\n      const { todos } = this.state;\r\n      const todo = todos[index];\r\n      \r\n      Axios.put(\"http://localhost:8080/todos/\" + todo.id, {\r\n          ...todo,\r\n          text: newText\r\n      })\r\n      .then(() => {\r\n      const newTodos = this.state.todos\r\n      .map((todo, i) => {\r\n        if (index === i){\r\n          return {\r\n              ...todo,\r\n              text: newText\r\n            };\r\n          }\r\n          return  todo;\r\n        });\r\n\r\n        // console.log(newTodos);\r\n        this.setState({\r\n          todos: newTodos\r\n        });\r\n      });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2><i className=\"tasks icon\"></i> Todo List </h2>\r\n        <section>\r\n            <AddTodo addTodoState={this.addTodoState} />\r\n        </section>\r\n        <section>\r\n            {this.state.todos.map((todo, index) => {\r\n                return (\r\n                  <div key={index} className=\"ui middle aligned animated selection list\">\r\n                    <TodoItem \r\n                    todo={todo} \r\n                    key={index}\r\n                    // can't access \"key\" react pacific inside \"TodoItem\" thrfor to access index we'll wrt this way, so that we can use index inside this component\r\n                    index={index}\r\n                    toggleComplete={this.toggleComplete}\r\n                    deleteTodoFromState={this.deleteTodoFromState}\r\n                    editTodoState={this.editTodoState}\r\n                    />\r\n                    <hr/>\r\n                  </div>\r\n                );\r\n             })\r\n            }\r\n        </section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todolist;\r\n\r\n// if we want to add any item inside the todo list, that can only be done by state in TodoList.js","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass PostList extends Component {\r\n\r\n    state = { \r\n        posts: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props;\r\n\r\n        // Axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`)\r\n        // .then((result) => {\r\n        //     console.log(result);\r\n\r\n        //     this.setState({\r\n        //         posts: result.data,\r\n        //     });\r\n        // });\r\n        this.getUserPostsList(user.id);\r\n    }\r\n\r\n    //same code in two lifecycle thats y combining into one method function\r\n    getUserPostsList = (id) =>{\r\n        Axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\r\n        .then((result) => {\r\n            console.log(result);\r\n\r\n            this.setState({\r\n                posts: result.data.slice(0,4),\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    // if we change the state/props this lifecycle will run\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"prevProps\", prevProps, \"prevState\", prevState);\r\n        // console.log(\"props\", this.props, \"State\", this.state);\r\n        console.log(\"Old User\", prevProps.user.id);\r\n        console.log(\"New User\", this.props.user.id);\r\n\r\n        if(prevProps.user.id !== this.props.user.id) {\r\n            //call api here\r\n        this.getUserPostsList(this.props.user.id);\r\n        }\r\n    }\r\n\r\n\r\n  render() {\r\n      const { posts } = this.state;\r\n\r\n    return (\r\n    <>\r\n        { posts.map((post) => {\r\n            return (\r\n            <div className=\"ui link card piled segment\" key={post.id}>\r\n            <div className=\"content\">\r\n            <div className=\"header\">{post.title}</div>\r\n                <div className=\"meta\">\r\n                <span className=\"category\">Human Resources</span>\r\n                </div>\r\n                <div className=\"description\">\r\n                <p>{post.body}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"extra content\">\r\n                <div className=\"right floated author\">\r\n                <i className=\"thumbtack icon\" />\r\n                {post.id}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        })}\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport './Dashboard.css';\r\nimport PostList from './PostList';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         users: []\r\n    //     }\r\n    // }\r\n    // ----- or --------\r\n    state = {\r\n        users: [],\r\n        selectedUser: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then((result) => {\r\n            console.log(result);\r\n\r\n            this.setState({\r\n                users: result.data,\r\n                selectedUser: result.data[0]\r\n            });\r\n        });\r\n    }\r\n\r\n    changeSelectedUser = (user) => {\r\n        this.setState({ selectedUser: user },\r\n            console.log(user));\r\n    }\r\n\r\n  render() {\r\n      const { users, selectedUser } = this.state;\r\n    return (\r\n      <>\r\n      <h2 className=\"ui piled header segment\">\r\n        <i className=\"ui pink inverted circular users icon\"></i>\r\n        <div className=\"content ui violet inverted header\">\r\n        Dashboard\r\n        </div>\r\n      </h2>\r\n  \r\n        <div className=\"ui vertically raised divided grid\">\r\n          <div className=\"two column row\">\r\n          { users.length === 0\r\n            ? (<div>\r\n                <div className=\"ui active inverted dimmer\">\r\n                <div className=\"ui medium text loader\">Loading Users</div>\r\n                </div>\r\n                </div>)\r\n            : (<div className=\"column ui vertical pointing menu\">\r\n                { users.map((user, index) => {\r\n                    return <div \r\n                    className={`ui middle aligned animated selection list ${user.id === selectedUser.id ? \"item active\" : \"\"}`}\r\n                    key={user.id}\r\n                    onClick={() => {\r\n                    this.changeSelectedUser(user)\r\n                    }}\r\n                    >\r\n                    <div className=\"ui tiny images header item\">\r\n                        <img src={`https://i.pravatar.cc/150?img${user.id}`} className=\"ui rounded image\" alt=\"Avatar\" />\r\n                        <div className=\"content\">\r\n                            <h4 className=\"ui image header\">\r\n                                <div className=\"content contentList\">\r\n                                { user.name }\r\n                                <div className=\"sub header\">Human Resources</div>\r\n                                </div>\r\n                            </h4><hr/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    })}\r\n                </div>\r\n                )\r\n            }\r\n            <div className=\"column\">\r\n                {selectedUser !== null &&\r\n                <PostList\r\n                user={selectedUser}\r\n                />\r\n                }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\n// import { Link, Route } from 'react-router-dom';\n//Match was used in older version, Now Route is used\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport Home from './Home';\n// import GamesPage from './component/GamesPage';\n// import GamesForm from './component/GamesForm';\nimport { HelloWorld } from './Demo/Demo';\nimport Todolist from './TodoList/Todolist';\nimport Dashboard from './Dashboard.js/Dashboard';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"ui container\">\n          <div className=\"ui four item menu\">\n            <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/\">Home</NavLink>\n            <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/dashboard\">Dashboard</NavLink>\n            <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/todolist\">Todolist</NavLink>\n            <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/demo\">Demo</NavLink>\n            {/* <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/games\">Games</NavLink>\n            <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/games/new\">New Games</NavLink> */}\n          </div>\n          <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/todolist\" component={Todolist} />\n          <Route path=\"/demo\" component={HelloWorld} />\n          {/* <Route exact path=\"/games\" component={GamesPage} />\n          <Route path=\"/games/new\" component={GamesForm} /> */}\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n// Menu.item will not change the automatically until you set props active=true and true value should be depend on current router url.\n\n\n// <Route path=\"/500\" component={GamesPage} /> \n// Match -> pattern, Route -> path \n\n\n// <Menu stackable>\n//   <Menu.Item active={this.isActive('/')} as={NavLink} exact to='/' content='Home' />\n//   <Menu.Item active={this.isActive('/abc')} as={NavLink} exact to='/abc' content='ABC' />\n//   <Menu.Item active={this.isActive('/def')} as={NavLink} exact to='/def' content='DEF' />\n// </Menu>\n\n// before:  <Link className=\"item\" to=\"/games/new\">New Games</Link>\n//after:    <NavLink className=\"item\" activeclassname = \"active\" activeonlywhenexact=\"true\" exact to=\"/games/new\">New Games</NavLink>\n\n","import { combineReducers } from 'redux';\r\n\r\nimport games from './games';\r\n\r\nconst rootReducer = combineReducers({\r\n    games\r\n})\r\n\r\nexport default rootReducer;","import { SET_GAMES } from \"./actions\";\r\n\r\nexport default function games(state = [], action = {}) {\r\n  switch(action.type) {\r\n    case SET_GAMES:\r\n      return action.games;\r\n    \r\n    default: return state;\r\n  }\r\n}\r\n","export const SET_GAMES = 'SET_GAMES';\r\n\r\nfunction handleResponse(response) {\r\n  if(response.ok) {\r\n    return response.json();\r\n  } else {\r\n    let error = new Error(response.statusText);\r\n    error.response = response;\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function setGames(games){\r\n  return {\r\n    type: SET_GAMES,\r\n    games\r\n  }\r\n}\r\n\r\nexport function saveGame(data){\r\n  return dispatch => {\r\n    fetch('/api/games', {\r\n      method: 'post',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(handleResponse);\r\n  }\r\n}\r\n\r\nexport function fetchGames() {\r\n  return dispatch => {\r\n      fetch('/api/games')\r\n      .then(res => res.json())\r\n      .then(data => dispatch(setGames(data.games)));\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from './App';\r\nimport rootReducer from './component/redux/rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n        )\r\n    );\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}